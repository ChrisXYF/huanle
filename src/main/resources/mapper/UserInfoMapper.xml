<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huanle.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.huanle.entity.UserInfo" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="profile_img" property="profileImg" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="passwd" property="passwd" jdbcType="CHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="update_at" property="updateAt" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    uid, nick_name, profile_img, email, gender, reg_time, last_login_time, group_id, 
    passwd, contact, update_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userInfo
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userInfo
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huanle.entity.UserInfo" >
    insert into userInfo (uid, nick_name, profile_img,
      email, gender, reg_time, 
      last_login_time, group_id, passwd, 
      contact, update_at)
    values (#{uid,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{profileImg,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{regTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{passwd,jdbcType=CHAR}, 
      #{contact,jdbcType=VARCHAR}, #{updateAt,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.huanle.entity.UserInfo" useGeneratedKeys="true" keyProperty="uid">
    insert into userInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="profileImg != null" >
        profile_img,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="profileImg != null" >
        #{profileImg,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=CHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huanle.entity.UserInfo" >
    update userInfo
    <set >
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="profileImg != null" >
        profile_img = #{profileImg,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=CHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huanle.entity.UserInfo" >
    update userInfo
    set nick_name = #{nickName,jdbcType=VARCHAR},
      profile_img = #{profileImg,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      passwd = #{passwd,jdbcType=CHAR},
      contact = #{contact,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>